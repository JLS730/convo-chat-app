{"version":3,"sources":["firebase.js","components/Login.js","context/AuthContext.js","components/Chat.js","index.js"],"names":["auth","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","Login","handleClick","e","target","classList","contains","signInWithRedirect","GoogleAuthProvider","FacebookAuthProvider","className","onClick","AuthContext","React","createContext","AuthProvider","children","useState","loading","setLoading","user","setUser","history","useHistory","useEffect","onAuthStateChanged","push","value","Provider","Chat","useContext","handleLogout","a","signOut","getFile","url","fetch","response","blob","data","File","type","axios","get","headers","email","uid","then","catch","formData","FormData","append","photoURL","avatar","name","post","error","console","log","Fragment","style","fontFamily","height","projectID","userName","userSecret","Website","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4c9f811.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nimport 'firebase/auth'\r\n\r\nexport const auth = firebase.initializeApp ({\r\n    apiKey: `${process.env.REACT_APP_FIREBASE_KEY}`,\r\n    authDomain: \"convo-chat-app-e8889.firebaseapp.com\",\r\n    projectId: \"convo-chat-app-e8889\",\r\n    storageBucket: \"convo-chat-app-e8889.appspot.com\",\r\n    messagingSenderId: \"504181463681\",\r\n    appId: \"1:504181463681:web:eb14bb758f4d38f953cb80\"\r\n}).auth()","import React from 'react'\r\nimport firebase from 'firebase'\r\n\r\nimport { auth } from '../firebase'\r\n\r\nconst Login = () => {\r\n    const handleClick = (e) => {\r\n        if(e.target.classList.contains('login-google')) {\r\n            auth.signInWithRedirect(new firebase.auth.GoogleAuthProvider())\r\n        } else {\r\n            auth.signInWithRedirect(new firebase.auth.FacebookAuthProvider())\r\n        }\r\n    }\r\n\r\n    return (\r\n        <main className=\"login-section\">\r\n            <div className=\"login-container\">\r\n                <h2 className=\"login-title\">Please Select Login</h2>\r\n                <div className=\"login-options-container\">\r\n                    <div className=\"login-google login\" onClick={e => handleClick(e)}><i className=\"fab fa-google\"></i> Login with Google</div>\r\n                    <div className=\"login-facebook login\" onClick={e => handleClick(e)}><i className=\"fab fa-facebook-f\"></i> Login with Facebook</div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Login","import React, { useEffect,useContext,useState } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { auth } from '../firebase'\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport const useAuth = () => useContext(AuthContext)\r\n\r\nconst AuthProvider = ({ children }) => {\r\n    const [loading, setLoading] = useState(true)\r\n    const [user, setUser] = useState({})\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged((user) => {\r\n            setUser(user)\r\n            setLoading(false)\r\n\r\n            if(user) {\r\n                history.push('/chat')\r\n            } else {\r\n                history.push('/')\r\n            }\r\n        })\r\n    }, [user, history])\r\n\r\n    const value = { user }\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthProvider","import React, { useState, useEffect } from 'react'\r\nimport { ChatEngine } from 'react-chat-engine'\r\nimport { useHistory } from 'react-router'\r\n\r\nimport { auth } from '../firebase'\r\nimport { useAuth } from '../context/AuthContext'\r\nimport axios from 'axios'\r\n\r\nconst Chat = () => {\r\n    const history = useHistory()\r\n    const { user } = useAuth()\r\n    const [loading, setLoading] = useState()\r\n\r\n    const handleLogout = async () => {\r\n        await auth.signOut()\r\n\r\n        history.push('/')\r\n    }\r\n\r\n    const getFile = async (url) => {\r\n        const response = await fetch(url)\r\n        const data = await response.blob()\r\n\r\n        return new File([data], 'userImage.jpg', { type: 'image/jpg' })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!user) {\r\n            history.push('/')\r\n            return\r\n        }\r\n\r\n        axios.get('https://api.chatengine.io/users/me/', {\r\n            headers: {\r\n                'Project-ID': '4d12526b-40f4-4520-aa45-7fae380057f6',\r\n                'User-Name': user.email,\r\n                'User-Secret': user.uid\r\n            }\r\n        })\r\n        .then(() => {\r\n            setLoading(false)\r\n        })\r\n        .catch(() => {\r\n            const formData = new FormData()\r\n\r\n            formData.append('email', user.email)\r\n            formData.append('username', user.email)\r\n            formData.append('secret', user.uid)\r\n\r\n            getFile(user.photoURL)\r\n                .then(avatar => {\r\n                    formData.append('avatar', avatar, avatar.name)\r\n\r\n                    axios.post('https://api.chatengine.io/users', formData, {\r\n                        headers: {\r\n                            'private-key': `${process.env.REACT_APP_CHAT_ENGINE_KEY}`\r\n                        }\r\n                    })\r\n                    .then(() => {\r\n                        setLoading(false)\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log(error)\r\n                    })\r\n                })\r\n        })\r\n    }, [user, history])\r\n\r\n    if(!user || loading) {\r\n        return 'Now Loading...'\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <nav className=\"navigation-bar\">\r\n                <h2 className=\"navigation-title\">Convo Chat App</h2>\r\n                <button type='button' className='logout-button' onClick={handleLogout}>Logout</button>\r\n            </nav>\r\n            <div style={{ fontFamily: '\\'Noto Sans\\', sans-serif' }}>\r\n                <ChatEngine \r\n                    height='calc(100vh - 50px)'\r\n                    projectID='4d12526b-40f4-4520-aa45-7fae380057f6'\r\n                    userName={user.email}\r\n                    userSecret={user.uid}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Chat","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\n// CSS Import\nimport './index.css';\n\n// Components Import\nimport Login from './components/Login';\nimport Chat from './components/Chat';\nimport AuthProvider from './context/AuthContext';\n\nconst Website = () => {\n  return (\n    <Router>\n      <AuthProvider>\n        <Switch>\n          <Route path='/chat' component={Chat}/>\n          <Route path='/' component={Login}/>\n        </Switch>\n      </AuthProvider>\n    </Router>\n  )\n}\n\nReactDOM.render(<Website />, document.getElementById('root'))"],"sourceRoot":""}